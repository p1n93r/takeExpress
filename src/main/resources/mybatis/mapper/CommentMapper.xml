<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.express.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.express.domain.Comment">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="parent_commit_id" jdbcType="INTEGER" property="parentCommitId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="time" jdbcType="CHAR" property="time" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="demand_id" jdbcType="INTEGER" property="demandId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    comment_id, user_id, parent_commit_id, content, `time`, avatar, score, nickname, 
    demand_id
  </sql>
  <select id="selectByExample" parameterType="com.express.domain.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.express.domain.CommentExample">
    delete from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="comment_id" keyProperty="commentId" parameterType="com.express.domain.Comment" useGeneratedKeys="true">
    insert into comment (user_id, parent_commit_id, content, 
      `time`, avatar, score, nickname, 
      demand_id)
    values (#{userId,jdbcType=INTEGER}, #{parentCommitId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{time,jdbcType=CHAR}, #{avatar,jdbcType=VARCHAR}, #{score,jdbcType=INTEGER}, #{nickname,jdbcType=VARCHAR}, 
      #{demandId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="comment_id" keyProperty="commentId" parameterType="com.express.domain.Comment" useGeneratedKeys="true">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="parentCommitId != null">
        parent_commit_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="time != null">
        `time`,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="demandId != null">
        demand_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="parentCommitId != null">
        #{parentCommitId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=CHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="demandId != null">
        #{demandId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.express.domain.CommentExample" resultType="java.lang.Long">
    select count(*) from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comment
    <set>
      <if test="record.commentId != null">
        comment_id = #{record.commentId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.parentCommitId != null">
        parent_commit_id = #{record.parentCommitId,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        `time` = #{record.time,jdbcType=CHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.demandId != null">
        demand_id = #{record.demandId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment
    set comment_id = #{record.commentId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      parent_commit_id = #{record.parentCommitId,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      `time` = #{record.time,jdbcType=CHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      demand_id = #{record.demandId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.express.domain.Comment">
    update comment
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="parentCommitId != null">
        parent_commit_id = #{parentCommitId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        `time` = #{time,jdbcType=CHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="demandId != null">
        demand_id = #{demandId,jdbcType=INTEGER},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.express.domain.Comment">
    update comment
    set user_id = #{userId,jdbcType=INTEGER},
      parent_commit_id = #{parentCommitId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      `time` = #{time,jdbcType=CHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      nickname = #{nickname,jdbcType=VARCHAR},
      demand_id = #{demandId,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>